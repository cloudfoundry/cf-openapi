/v3/builds:
  get:
    summary: List builds
    description: Retrieve all builds the user has access to.
    operationId: listBuilds
    tags:
      - Builds
    parameters:
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
      - $ref: '../components/parameters/LabelSelector.yaml'
      - name: states
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of build states to filter by
      - name: app_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of app GUIDs to filter by
      - name: package_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of package GUIDs to filter by
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/BuildList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
  post:
    summary: Create a build
    description: Create a new build.
    operationId: createBuild
    tags:
      - Builds
    requestBody:
      description: Build object that needs to be created
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              package:
                $ref: '../components/schemas/Relationship.yaml'
              lifecycle:
                $ref: '../components/schemas/Lifecycle.yaml'
              staging_memory_in_mb:
                type: integer
                description: Memory in MB allocated for staging of the build
              staging_disk_in_mb:
                type: integer
                description: Disk space in MB allocated for staging of the build
              staging_log_rate_limit_bytes_per_second:
                type: integer
                description: Log rate limit in bytes per second allocated for staging of the build
              metadata:
                $ref: '../components/schemas/Metadata.yaml'
            required:
              - package
            description: Request schema for creating a build
    responses:
      '201':
        description: Successfully created build
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Build.yaml'
        links:
          app:
            operationId: getApp
            parameters:
              guid: $response.body#/relationships/app/data/guid
            description: Retrieve the app for this build
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
/v3/builds/{guid}:
  get:
    summary: Get a build
    description: Retrieve details of a specific build by its GUID.
    operationId: getBuild
    tags:
      - Builds
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully retrieved build
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Build.yaml'
        links:
          app:
            operationId: getApp
            parameters:
              guid: $response.body#/relationships/app/data/guid
            description: Retrieve the app for this build
          droplet:
            operationId: getDroplet
            parameters:
              guid: $response.body#/droplet/data/guid
            description: Retrieve the droplet for this build
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/builds:
  get:
    summary: List builds for an app
    description: Retrieve all builds for the app.
    operationId: listAppBuilds
    tags:
      - Builds
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - name: states
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of build states to filter by
      - $ref: '../components/parameters/LabelSelector.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/BuildList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update a build
    description: Update attributes of a specific build by its GUID.
    operationId: updateBuild
    tags:
      - Builds
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      description: Build object that needs to be updated
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '../components/schemas/Metadata.yaml'
            description: Request schema for updating a build
    responses:
      '200':
        description: Successfully updated build
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Build.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'

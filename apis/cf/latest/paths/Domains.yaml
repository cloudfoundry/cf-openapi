/v3/domains:
  get:
    summary: List domains
    description: Retrieve a list of all domains the user has access to.
    operationId: listDomains
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
      - $ref: '../components/parameters/LabelSelector.yaml'
      - name: guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of GUIDs to filter by
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of domain names to filter by
      - name: organization_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of owning organization GUIDs to filter by
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/DomainList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
  post:
    summary: Create a domain
    description: Create a new domain.
    operationId: createDomain
    tags:
      - Domains
    requestBody:
      $ref: '../components/requestBodies/DomainCreateRequestBody.yaml'
    responses:
      '201':
        description: Successfully created domain
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Domain.yaml'
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
/v3/domains/{guid}:
  get:
    summary: Retrieve a domain
    description: Retrieve details of a specific domain by its GUID.
    operationId: getDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully retrieved domain
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Domain.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update a domain
    description: Update attributes of a specific domain by its GUID.
    operationId: updateDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      description: Domain object that needs to be updated
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '../components/schemas/Metadata.yaml'
            description: Request schema for updating a domain
    responses:
      '200':
        description: Successfully updated domain
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Domain.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  delete:
    summary: Delete a domain
    description: Delete a specific domain by its GUID.
    operationId: deleteDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '204':
        description: Successfully deleted domain
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/domains/{guid}/relationships/shared_organizations:
  post:
    summary: Share a domain
    description: Share an organization-scoped domain to other organizations specified by a list of organization GUIDs.
    operationId: shareDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      description: List of organizations to share the domain with
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '../components/schemas/Relationship.yaml'
            description: Organization relationships; each organization will be entitled to manage this isolation segment
    responses:
      '200':
        description: Successfully shared domain
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                items:
                  type: object
                  properties:
                    guid:
                      type: string
                      format: uuid
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'
/v3/organizations/{guid}/domains:
  get:
    summary: List domains for an organization
    description: Retrieve all domains available in an organization for the current user.
    operationId: listDomainsForOrganization
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of domain names to filter by
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/DomainList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/domains/{guid}/route_reservations:
  get:
    summary: Check reserved routes for a domain
    description: Check if a specific route for a domain exists.
    operationId: checkReservedRoutesForDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - name: host
        in: query
        schema:
          type: string
        description: Hostname to filter by
      - name: path
        in: query
        schema:
          type: string
        description: Path to filter by
      - name: port
        in: query
        schema:
          type: integer
        description: Port to filter by
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                matching_route:
                  type: boolean
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/domains/{guid}/relationships/shared_organizations/{org_guid}:
  delete:
    summary: Unshare a domain
    description: Unshare a domain from a specific organization.
    operationId: unshareDomain
    tags:
      - Domains
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - name: org_guid
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The GUID of the organization to unshare the domain from
    responses:
      '204':
        description: Successfully unshared domain
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'

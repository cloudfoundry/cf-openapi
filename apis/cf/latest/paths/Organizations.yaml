/v3/organizations:
  get:
    summary: List organizations
    description: Retrieve all organizations the user has access to.
    operationId: listOrganizations
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
      - $ref: '../components/parameters/LabelSelector.yaml'
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of organization names to filter by
      - name: guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of organization guids to filter by
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/OrganizationList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
  post:
    summary: Create an organization
    description: Create a new organization.
    operationId: createOrganization
    tags:
      - Organizations
    requestBody:
      $ref: '../components/requestBodies/OrganizationCreateRequestBody.yaml'
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Organization.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'
/v3/organizations/{guid}:
  get:
    summary: Get an organization
    description: This endpoint retrieves the specified organization object.
    operationId: getOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Organization.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update an organization
    description: Update an organization.
    operationId: updateOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      $ref: '../components/requestBodies/OrganizationUpdateRequestBody.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Organization.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'
  delete:
    summary: Delete an organization
    description: When an organization is deleted, user roles associated with the organization will also be deleted.
    operationId: deleteOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '202':
        description: Accepted
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/organizations/{guid}/domains/default:
  get:
    summary: Get default domain
    description: Retrieve the default domain for a given organization.
    operationId: getDefaultDomainForOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Domain.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/organizations/{guid}/usage_summary:
  get:
    summary: Get usage summary
    description: This endpoint retrieves the specified organization object's memory and app instance usage summary.
    operationId: getUsageSummaryForOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                usage_summary:
                  type: object
                  properties:
                    started_instances:
                      type: integer
                    memory_in_mb:
                      type: integer
                    routes:
                      type: integer
                    service_instances:
                      type: integer
                    reserved_ports:
                      type: integer
                    domains:
                      type: integer
                    per_app_tasks:
                      type: integer
                    service_keys:
                      type: integer
                links:
                  type: object
                  properties:
                    self:
                      $ref: '../components/schemas/Link.yaml'
                      description: The URL to get this usage summary
                      organization:
                        $ref: '../components/schemas/Link.yaml'
                        description: The URL to get the organization for this usage summary
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/organizations/{guid}/users:
  get:
    summary: List users for an organization
    description: Retrieve all users with a role in the specified organization.
    operationId: listUsersForOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - name: guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of user guids to filter by
      - name: usernames
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of usernames to filter by
      - name: origins
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of user origins to filter by
      - name: partial_usernames
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of partial usernames to filter by
      - $ref: '../components/parameters/LabelSelector.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/UserList.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/organizations/{guid}/relationships/default_isolation_segment:
  get:
    summary: Get default isolation segment
    description: Retrieve the default isolation segment for a given organization.
    operationId: getDefaultIsolationSegmentForOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/RelationshipToOne.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Assign default isolation segment
    description: Set the default isolation segment for a given organization.
    operationId: assignDefaultIsolationSegmentForOrganization
    tags:
      - Organizations
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../components/schemas/RelationshipToOne.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/RelationshipToOne.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'

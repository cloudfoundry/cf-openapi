/v3/roles:
  get:
    summary: List roles
    description: This endpoint lists roles that the user has access to.
    operationId: listRoles
    tags:
      - Roles
    parameters:
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/UpdatedAts.yaml'
      - $ref: '../components/parameters/LabelSelector.yaml'
      - name: guids
        in: query
        description: Comma-delimited list of role guids to filter by
        schema:
          type: array
          items:
            type: string
      - name: types
        in: query
        description: Comma-delimited list of role types to filter by
        schema:
          type: array
          items:
            type: string
            enum:
              - organization_user
              - organization_auditor
              - organization_manager
              - organization_billing_manager
              - space_auditor
              - space_developer
              - space_manager
              - space_supporter
      - name: organization_guids
        in: query
        description: Comma-delimited list of organization guids to filter by
        schema:
          type: array
          items:
            type: string
      - name: space_guids
        in: query
        description: Comma-delimited list of space guids to filter by
        schema:
          type: array
          items:
            type: string
      - name: user_guids
        in: query
        description: Comma-delimited list of user guids to filter by
        schema:
          type: array
          items:
            type: string
      - name: include
        in: query
        description: Optionally include additional related resources in the response; valid values are `user`, `space`, and `organization`.
        schema:
          type: array
          items:
            type: string
            enum:
              - user
              - space
              - organization
    responses:
      '200':
        $ref: '../components/responses/RoleListResponse.yaml'
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'
      '500':
        $ref: '../components/responses/500.yaml'
  post:
    summary: Create a role
    description: |-
      This endpoint creates a new role for a user in an organization or space.

      To create an organization role you must be an admin or organization manager in the organization associated with the role.

      To create a space role you must be an admin, an organization manager in the parent organization of the space associated with the role, or a space manager in the space associated with the role.

      For a user to be assigned a space role, the user must already have an organization role in the parent organization.

      If the associated user is valid but does not exist in Cloud Controllerâ€™s database, a user resource will be created automatically.

      If CAPI property `cc.allow_user_creation_by_org_manager` is enabled, the organization role is being created by username + origin and the user does not exist in UAA yet, the user will be created. The origin must be different from `uaa` in this case.
    operationId: createRole
    tags:
      - Roles
    requestBody:
      $ref: '../components/requestBodies/RoleCreate.yaml'
    responses:
      '201':
        description: Role created
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Role.yaml'
        links:
          user:
            operationId: getUser
            parameters:
              guid: $response.body#/relationships/user/data/guid
            description: Retrieve the user for this role
          organization:
            operationId: getOrganization
            parameters:
              guid: $response.body#/relationships/organization/data/guid
            description: Retrieve the organization for this role (if organization role)
          space:
            operationId: getSpace
            parameters:
              guid: $response.body#/relationships/space/data/guid
            description: Retrieve the space for this role (if space role)
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '422':
        $ref: '../components/responses/UnprocessableEntity.yaml'
      '500':
        $ref: '../components/responses/500.yaml'
/v3/roles/{guid}:
  get:
    summary: Get a role
    description: This endpoint gets an individual role resource.
    operationId: getRole
    tags:
      - Roles
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - name: include
        in: query
        description: Optionally include additional related resources in the response; valid values are `user`, `space`, and `organization`.
        schema:
          type: array
          items:
            type: string
            enum:
              - user
              - space
              - organization
    responses:
      '200':
        description: Role retrieved
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Role.yaml'
        links:
          user:
            operationId: getUser
            parameters:
              guid: $response.body#/relationships/user/data/guid
            description: Retrieve the user for this role
          organization:
            operationId: getOrganization
            parameters:
              guid: $response.body#/relationships/organization/data/guid
            description: Retrieve the organization for this role (if organization role)
          space:
            operationId: getSpace
            parameters:
              guid: $response.body#/relationships/space/data/guid
            description: Retrieve the space for this role (if space role)
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  delete:
    summary: Delete a role
    description: This endpoint deletes an individual role.
    operationId: deleteRole
    tags:
      - Roles
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '202':
        description: Accepted
        headers:
          Location:
            description: URL of the job that is deleting the role
            schema:
              type: string
              format: uri
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'

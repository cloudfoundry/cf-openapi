/v3/apps:
  get:
    summary: List apps
    description: Retrieve all apps the user has access to.
    operationId: listApps
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Page.yaml'
      - $ref: '../components/parameters/PerPage.yaml'
      - $ref: '../components/parameters/OrderBy.yaml'
      - $ref: '../components/parameters/CreatedAts.yaml'
      - $ref: '../components/parameters/updatedAts.yaml'
      - $ref: '../components/parameters/labelSelector.yaml'
      - name: guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of app GUIDs to filter by
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of app names to filter by
      - name: space_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of space GUIDs to filter by
      - name: organization_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of organization GUIDs to filter by
      - name: stacks
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of stack names to filter by
      - name: lifecycle_type
        in: query
        schema:
          type: string
        description: Lifecycle type to filter by
      - name: include
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of resource names to include in the response
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/AppList.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '500':
        $ref: '../components/responses/500.yaml'
  post:
    summary: Create an app
    description: Create a new app.
    operationId: createApp
    tags:
      - Apps
    requestBody:
      description: App object that needs to be created
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the app
              relationships:
                $ref: '../components/schemas/Relationships.yaml'
              lifecycle:
                $ref: '../components/schemas/Lifecycle.yaml'
              metadata:
                $ref: '../components/schemas/Metadata.yaml'
              environment_variables:
                type: object
                description: Environment variables to be used for the App when running
            required:
              - name
              - relationships
            description: Request schema for creating an app
    responses:
      '201':
        description: Successfully created app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '422':
        description: Unprocessable Entity
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Errors.yaml'
            examples:
              uniqueness_error:
                value:
                  errors:
                    - code: 10016
                      title: CF-UniquenessError
                      detail: The given app name is already taken in the targeted space
              feature_disabled:
                value:
                  errors:
                    - code: 330002
                      title: CF-FeatureDisabled
                      detail: Some feature flag must be enabled by the Cloud Foundry admin in order to push the app as is.
/v3/apps/{guid}:
  get:
    summary: Get an app
    description: Retrieve details of a specific app by its GUID.
    operationId: getApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully retrieved app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update an app
    description: Update attributes of a specific app by its GUID.
    operationId: updateApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      description: App object that needs to be updated
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the app
              lifecycle:
                $ref: '../components/schemas/Lifecycle.yaml'
              metadata:
                $ref: '../components/schemas/Metadata.yaml'
            required:
              - name
            description: Request schema for updating an app
    responses:
      '200':
        description: Successfully updated app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '422':
        description: Unprocessable Entity
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Error.yaml'
  delete:
    summary: Delete an app
    description: Delete a specific app by its GUID.
    operationId: deleteApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '202':
        description: Successfully deleted app
        headers:
          Location:
            description: URL of the job that is deleting the app
            schema:
              type: string
              format: uri
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/actions/start:
  post:
    summary: Start an app
    description: Start a specific app by its GUID.
    operationId: startApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully started app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/actions/stop:
  post:
    summary: Stop an app
    description: Stop a specific app by its GUID.
    operationId: stopApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully stopped app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/actions/restart:
  post:
    summary: Restart an app
    description: Stop and then start a specific app by its GUID.
    operationId: restartApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully restarted app
        content:
          application/json:
            schema:
              $ref: '../components/schemas/App.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/droplets/current:
  get:
    summary: Get current droplet
    description: Get the current droplet for an app.
    operationId: getCurrentDropletForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: Successfully retrieved droplet
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Droplet.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/relationships/current_droplet:
  get:
    summary: Get current droplet association for an app
    description: This endpoint retrieves the current droplet relationship for an app.
    operationId: getCurrentDropletAssociationForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '../components/schemas/RelationshipToOne.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Set current droplet
    description: Set the current droplet for an app. The current droplet is the droplet that the app will use when running.
    operationId: setCurrentDropletForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      description: Droplet relationship object that needs to be set
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '../components/schemas/Relationship.yaml'
            required:
              - data
            description: Request schema for setting the current droplet
    responses:
      '200':
        description: Successfully set current droplet
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Relationship.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/env:
  get:
    summary: Get environment for an app
    description: Retrieve the environment variables that will be provided to an app at runtime. It will include environment variables for Environment Variable Groups and Service Bindings.
    operationId: getEnvForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/environment_variables:
  get:
    summary: Get environment variables for an app
    description: Retrieve the environment variables that are associated with the given app. For the entire list of environment variables that will be available to the app at runtime, see the env endpoint.
    operationId: getEnvironmentVariablesForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update environment variables for an app
    description: Update the environment variables associated with the given app. The variables given in the request will be merged with the existing app environment variables. Any requested variables with a value of null will be removed from the app. Environment variable names may not start with VCAP_. PORT is not a valid environment variable. The updated environment variables will not take effect until the app is restarted.
    operationId: updateEnvironmentVariablesForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              var:
                type: object
                additionalProperties:
                  type: string
                description: Environment variables to inject; keys and values must be strings
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/permissions:
  get:
    summary: Get permissions for an app
    description: Get the current user’s permissions for the given app. If a user can see an app, then they can see its basic data. Only admin, read-only admins, and space developers can read sensitive data.
    operationId: getPermissionsForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/ssh_enabled:
  get:
    summary: Get SSH enabled for an app
    description: Returns if an application’s runtime environment will accept ssh connections. If ssh is disabled, the reason field will describe whether it is disabled globally, at the space level, or at the app level.
    operationId: getSshEnabledForApp
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/actions/clear_buildpack_cache:
  post:
    summary: Clear buildpack cache for application
    description: This endpoint will delete the buildpack cache for a specified app. The buildpack cache is used during staging by buildpacks as a way to cache certain resources, e.g. downloaded Ruby gems. A user may want to use this endpoint when an app doesn’t stage anymore due to out-of-disk caused by a large buildpack cache content.
    operationId: clearBuildpackCacheForApplication
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '202':
        description: Accepted
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/features:
  get:
    summary: List app features
    description: This endpoint retrieves the list of features for the specified app.
    operationId: listAppFeatures
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
/v3/apps/{guid}/features/{name}:
  get:
    summary: Get an app feature
    description: Get an app feature.
    operationId: getAppFeature
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - name: name
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
  patch:
    summary: Update an app feature
    description: Update an app feature.
    operationId: updateAppFeature
    tags:
      - Apps
    parameters:
      - $ref: '../components/parameters/Guid.yaml'
      - name: name
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            properties:
              enabled:
                type: boolean
    responses:
      '200':
        description: OK
      '404':
        $ref: '../components/responses/NotFound.yaml'
